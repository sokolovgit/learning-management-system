services:
  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    ports:
      - "3000:3000"
    depends_on:
      - database
      - mailhog
      - minio
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      target: development
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - app-network

  database:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: lms
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"  # MinIO port
      - "9001:9001"  # MinIO Console port
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data
    command: server /data
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  pgadmin_data:
  minio_data:


